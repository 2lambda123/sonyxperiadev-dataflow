name:                dataflow
version:             0.6.0.0
synopsis:            Generate Graphviz documents from a Haskell representation.
description:         Outputs .dot files that can be processed by the dot
                     command. Currently it only supports the DFD output format
                     (http://en.wikipedia.org/wiki/Data_flow_diagram). Support
                     for a Graphviz-like input format (instead of using the
                     data structures in Haskell) is planned.
homepage:            https://github.com/sonymobile/dataflow
license:             AllRightsReserved
author:              Oskar WickstrÃ¶m
maintainer:          oskar.wickstrom@jayway.com
copyright:           Sony Mobile AB
category:            Code Generation, Compiler, Graphs

build-type:          Simple
extra-source-files:  README.md,
                     LICENSE,
                     examples/webapp.flow,
                     examples/webapp.png,
                     examples/legend.flow,
                     examples/legend.png,
                     examples/Makefile
cabal-version:       >=1.10

source-repository head
  type: git
  location: git@github.com:sonymobile/dataflow.git

library
  exposed-modules:
    DataFlow.Core,
    DataFlow.Reader,
    DataFlow.PrettyRenderer,
    DataFlow.Graphviz,
    DataFlow.Graphviz.EdgeNormalization,
    DataFlow.Graphviz.Renderer,
    DataFlow.PlantUML,
    DataFlow.PlantUML.Renderer,
    DataFlow.SequenceDiagram,
    DataFlow.DFD
  build-depends:
    base >=4 && <4.8,
    mtl >=2.2,
    containers >= 0.4,
    parsec
  hs-source-dirs:      src
  default-language:    Haskell2010

executable dataflow
  main-is: Main.hs
  build-depends:
    base >=4 && <4.8,
    dataflow
  hs-source-dirs:      cli
  default-language:    Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  default-language: Haskell98
  hs-source-dirs: test
  build-depends:
    base,
    HUnit,
    hspec == 2.*,
    dataflow
  ghc-options: -Wall
